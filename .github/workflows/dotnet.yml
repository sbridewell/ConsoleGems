# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build, run unit tests and check code coverage
permissions: read-all

on:
  push:
    branches: [ "main", "epic/*" ]
  pull_request:
    branches: [ "main", "epic/*" ]

# env:
#   # These variables aren't dependent on any other variables, so we can set them here
#   # in an `env` block.
#   # TODO: separate PowerShell script to set all the environment variables?
#   CONSOLEGEMS_TEST_FOLDER: "./ConsoleGems.Test/"
#   MAZEGAME_TEST_FOLDER: "./Demos/MazeGame.Test/"
#   DOTNET_TEST_EXTRA_PARAMS: '--no-build --verbosity normal --filter "Category!=Integration" --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover--no-build --verbosity normal --filter "Category!=Integration" --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover'
#   # TODO: common dotnet test parameters

jobs:
  # setup:
  #   uses: ./.github/workflows/Setup.yml

  # set_environment_variables_for_consolegems:
  #   runs-on: windows-latest
  #   needs: setup
  #   steps:
  #   - name: Set environment variables for ConsoleGems
  #     run: |
  #       powershell.exe -File ./.github/workflows/Set-EnvironmentVariables.ps1 `
  #         -TestFolder "./ConsoleGems.Test" `
  #         -TestProject "ConsoleGems.Test.csproj"

  build_and_test_consolegems:
    # needs: setup
    uses: ./.github/workflows/BuildAndTest.yml
    with:
      TEST_FOLDER: "ConsoleGems.Test"
      TEST_PROJECT: "ConsoleGems.Test.csproj"

  # set_environment_variables_for_mazegame:
  #   runs-on: windows-latest
  #   steps:
  #   - name: Set environment variables forMazeGame
  #     run: |
  #       powershell.exe -File ./.github/workflows/Set-EnvironmentVariables.ps1 `
  #         -TestFolder "./Demo/MazeGame.Test" `
  #         -TestProject "MazeGame.Test.csproj"

  build_and_test_mazegame:
    # needs: setup
    uses: ./.github/workflows/BuildAndTest.yml
    with:
      TEST_FOLDER: "Demo/MazeGame.Test"
      TEST_PROJECT: "MazeGame.Test.csproj"

  # run_integration_tests:
  #   runs-on: windows-latest
  #   needs: [setup, build_and_test_consolegems, build_and_test_mazegame]
  #   steps:
  #   - name: Run integration tests
  #     run: dotnet test --no-build --verbosity normal --filter "Category=Integration"
